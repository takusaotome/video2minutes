[{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/App.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/FileUploader.vue","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'event' is defined but never used.","line":282,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":282,"endColumn":33},{"ruleId":"no-unused-vars","severity":1,"message":"'accept' is defined but never used.","line":564,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":564,"endColumn":34}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    class=\"file-uploader\"\n    :class=\"{ 'drag-active': isDragOver }\"\n    @dragenter=\"onDragEnter\"\n    @dragover=\"onDragOver\"\n    @dragleave=\"onDragLeave\"\n    @drop=\"onDrop\"\n  >\n    <Card class=\"upload-card\">\n      <template #content>\n        <div class=\"upload-container\">\n          <!-- Title Section -->\n          <div class=\"upload-header\">\n            <div class=\"title-section\">\n              <i class=\"pi pi-cloud-upload title-icon\"></i>\n              <h2 class=\"upload-title\">動画・音声ファイルをアップロード</h2>\n            </div>\n            <p class=\"upload-description\">動画・音声から自動的に議事録を生成します</p>\n          </div>\n\n          <!-- Upload Area -->\n          <div class=\"upload-area\">\n            <FileUpload\n              ref=\"fileUpload\"\n              mode=\"basic\"\n              :multiple=\"true\"\n              accept=\"video/*,audio/*,.mp4,.avi,.mov,.mkv,.wmv,.flv,.webm,.mp3,.wav,.m4a,.aac,.flac,.ogg,.wma\"\n              :maxFileSize=\"5368709120\"\n              :customUpload=\"true\"\n              @uploader=\"onUpload\"\n              @select=\"onSelect\"\n              @clear=\"onClear\"\n              :disabled=\"loading\"\n              chooseLabel=\"ファイルを選択\"\n              class=\"custom-file-upload\"\n            >\n              <template #empty>\n                <div class=\"upload-dropzone\" :class=\"{ dragover: isDragOver }\">\n                  <!-- Animated Background Elements -->\n                  <div class=\"dropzone-bg-elements\">\n                    <div class=\"floating-element element-1\"></div>\n                    <div class=\"floating-element element-2\"></div>\n                    <div class=\"floating-element element-3\"></div>\n                  </div>\n\n                  <div class=\"dropzone-content\">\n                    <div class=\"upload-icon-container\">\n                      <div class=\"icon-wrapper\">\n                        <i\n                          class=\"pi pi-cloud-upload upload-icon\"\n                          :class=\"{ bounce: isDragOver }\"\n                        ></i>\n                        <div class=\"icon-glow\"></div>\n                      </div>\n                    </div>\n\n                    <div class=\"upload-text-container\">\n                      <h3\n                        class=\"upload-text\"\n                        :class=\"{ highlight: isDragOver }\"\n                      >\n                        {{\n                          isDragOver\n                            ? 'ファイルをここにドロップしてください！'\n                            : 'ここに動画・音声ファイルをドラッグ&ドロップ'\n                        }}\n                      </h3>\n                      <p class=\"upload-subtext\">\n                        {{\n                          isDragOver\n                            ? '動画・音声ファイルを離してアップロード開始'\n                            : 'または下のボタンからファイルを選択してください'\n                        }}\n                      </p>\n                    </div>\n\n                    <div class=\"upload-actions-container\">\n                      <Button\n                        label=\"ファイルを選択\"\n                        icon=\"pi pi-folder-open\"\n                        class=\"upload-button-primary\"\n                        :loading=\"loading\"\n                        @click=\"triggerFileSelect\"\n                      />\n\n                      <div class=\"divider\">\n                        <span>または</span>\n                      </div>\n\n                      <div class=\"quick-actions\">\n                        <Button\n                          label=\"カメラロール\"\n                          icon=\"pi pi-image\"\n                          class=\"quick-action-btn\"\n                          @click=\"openFileDialog('video/*')\"\n                        />\n                        <Button\n                          label=\"最近のファイル\"\n                          icon=\"pi pi-clock\"\n                          class=\"quick-action-btn\"\n                          @click=\"showRecentFiles\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"upload-note\">\n                      <div class=\"note-content\">\n                        <i class=\"pi pi-info-circle\"></i>\n                        <div class=\"note-text\">\n                          <div class=\"supported-formats\">\n                            動画形式: MP4, AVI, MOV, MKV, WMV, FLV, WebM<br>\n                            音声形式: MP3, WAV, M4A, AAC, FLAC, OGG, WMA\n                          </div>\n                          <div class=\"file-limit\">最大ファイルサイズ: 5GB</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Drag & Drop Overlay -->\n                  <div v-if=\"isDragOver\" class=\"drag-overlay\">\n                    <div class=\"drag-overlay-content\">\n                      <i class=\"pi pi-arrow-down drag-icon\"></i>\n                      <p>ファイルをここにドロップ</p>\n                      <div class=\"drop-hint\">\n                        <i class=\"pi pi-arrow-down drop-arrow\"></i>\n                        <span>離してアップロード開始</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </FileUpload>\n\n            <!-- Selected Files Display -->\n            <div v-if=\"selectedFiles.length > 0\" class=\"selected-files-section\">\n              <div class=\"selected-files-header\">\n                <h4><i class=\"pi pi-check-circle\"></i> 選択されたファイル</h4>\n              </div>\n              <div class=\"selected-files-list\">\n                <div\n                  v-for=\"file in selectedFiles\"\n                  :key=\"file.name\"\n                  class=\"file-item\"\n                >\n                  <div class=\"file-info\">\n                    <div class=\"file-icon\">\n                      <i class=\"pi pi-file-video\"></i>\n                    </div>\n                    <div class=\"file-details\">\n                      <span class=\"file-name\">{{ file.name }}</span>\n                      <span class=\"file-size\">{{\n                        formatFileSize(file.size)\n                      }}</span>\n                    </div>\n                  </div>\n                  <Button\n                    icon=\"pi pi-trash\"\n                    class=\"p-button-outlined p-button-danger p-button-sm file-remove-btn\"\n                    @click=\"removeFile(file)\"\n                    :disabled=\"loading\"\n                    v-tooltip=\"'ファイルを削除'\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <!-- Upload Progress -->\n            <div\n              v-if=\"uploadProgress.length > 0\"\n              class=\"upload-progress-section\"\n            >\n              <div class=\"progress-header\">\n                <h4>\n                  <i class=\"pi pi-spin pi-spinner\"></i> アップロード進行状況\n                </h4>\n              </div>\n              <div class=\"progress-list\">\n                <div\n                  v-for=\"progress in uploadProgress\"\n                  :key=\"progress.name\"\n                  class=\"progress-item\"\n                >\n                  <div class=\"progress-info\">\n                    <div class=\"progress-file-info\">\n                      <span class=\"progress-name\">{{ progress.name }}</span>\n                      <span class=\"progress-percent\"\n                        >{{ progress.percent }}%</span\n                      >\n                    </div>\n                    <ProgressBar\n                      :value=\"progress.percent\"\n                      :showValue=\"false\"\n                      class=\"progress-bar\"\n                    />\n                    <div v-if=\"progress.status\" class=\"progress-status\">\n                      <Badge\n                        :value=\"getStatusLabel(progress.status)\"\n                        :severity=\"getStatusSeverity(progress.status)\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Upload Button -->\n            <div\n              v-if=\"selectedFiles.length > 0 && uploadProgress.length === 0\"\n              class=\"upload-actions\"\n            >\n              <Button\n                label=\"アップロード開始\"\n                icon=\"pi pi-upload\"\n                @click=\"startUpload\"\n                :loading=\"loading\"\n                :disabled=\"selectedFiles.length === 0\"\n                class=\"upload-start-button\"\n                size=\"large\"\n              />\n            </div>\n          </div>\n        </div>\n      </template>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useToast } from 'primevue/usetoast'\nimport { useTasksStore } from '@/stores/tasks'\nimport Card from 'primevue/card'\nimport FileUpload from 'primevue/fileupload'\nimport Button from 'primevue/button'\nimport ProgressBar from 'primevue/progressbar'\nimport Badge from 'primevue/badge'\n\nexport default {\n  name: 'FileUploader',\n  components: {\n    Card,\n    FileUpload,\n    Button,\n    ProgressBar,\n    Badge\n  },\n  emits: ['upload-started', 'upload-completed', 'upload-error'],\n  setup(_, { emit }) {\n    const toast = useToast()\n    const tasksStore = useTasksStore()\n\n    const fileUpload = ref(null)\n    const selectedFiles = ref([])\n    const uploadProgress = ref([])\n    const loading = ref(false)\n    const isDragOver = ref(false)\n    const isDragging = ref(false)\n    const dragCounter = ref(0)\n\n    const onSelect = event => {\n      console.log('Files selected:', event.files)\n      selectedFiles.value = [...event.files]\n      uploadProgress.value = []\n    }\n\n    const onClear = () => {\n      selectedFiles.value = []\n      uploadProgress.value = []\n    }\n\n    const removeFile = fileToRemove => {\n      selectedFiles.value = selectedFiles.value.filter(\n        file => file !== fileToRemove\n      )\n      if (selectedFiles.value.length === 0) {\n        uploadProgress.value = []\n      }\n    }\n\n    const onUpload = async event => {\n      // This is called by PrimeVue's internal upload mechanism\n      // We handle uploads manually in startUpload instead\n    }\n\n    const startUpload = async () => {\n      if (selectedFiles.value.length === 0) {\n        toast.add({\n          severity: 'warn',\n          summary: '警告',\n          detail: 'アップロードするファイルを選択してください',\n          life: 3000\n        })\n        return\n      }\n\n      loading.value = true\n\n      // Initialize progress tracking\n      uploadProgress.value = selectedFiles.value.map(file => ({\n        name: file.name,\n        percent: 0,\n        status: 'uploading'\n      }))\n\n      try {\n        // Upload files sequentially to avoid overwhelming the server\n        for (let i = 0; i < selectedFiles.value.length; i++) {\n          const file = selectedFiles.value[i]\n          const progressItem = uploadProgress.value[i]\n\n          try {\n            emit('upload-started', { file })\n\n            const task = await tasksStore.uploadFile(file, percent => {\n              progressItem.percent = percent\n            })\n\n            progressItem.status = 'completed'\n            progressItem.percent = 100\n\n            toast.add({\n              severity: 'success',\n              summary: 'アップロード完了',\n              detail: `${file.name} のアップロードが完了しました`,\n              life: 5000\n            })\n\n            emit('upload-completed', { file, task })\n          } catch (error) {\n            progressItem.status = 'error'\n\n            toast.add({\n              severity: 'error',\n              summary: 'アップロードエラー',\n              detail: `${file.name}: ${error.message}`,\n              life: 5000\n            })\n\n            emit('upload-error', { file, error })\n          }\n        }\n\n        // Clear files after successful upload\n        setTimeout(() => {\n          selectedFiles.value = []\n          uploadProgress.value = []\n          fileUpload.value?.clear()\n        }, 2000)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const formatFileSize = bytes => {\n      if (bytes === 0) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const getStatusSeverity = status => {\n      switch (status) {\n        case 'completed':\n          return 'success'\n        case 'error':\n          return 'danger'\n        case 'uploading':\n          return 'info'\n        default:\n          return 'info'\n      }\n    }\n\n    const getStatusLabel = status => {\n      switch (status) {\n        case 'completed':\n          return '完了'\n        case 'error':\n          return 'エラー'\n        case 'uploading':\n          return 'アップロード中'\n        default:\n          return status\n      }\n    }\n\n    const triggerFileSelect = () => {\n      try {\n        if (\n          fileUpload.value &&\n          fileUpload.value.$refs &&\n          fileUpload.value.$refs.fileInput\n        ) {\n          fileUpload.value.$refs.fileInput.click()\n        } else {\n          // Fallback: try to find the file input element\n          const fileInput = document.querySelector(\n            '.custom-file-upload input[type=\"file\"]'\n          )\n          if (fileInput) {\n            fileInput.click()\n          }\n        }\n      } catch (error) {\n        console.warn('Could not trigger file select:', error)\n      }\n    }\n\n    // Drag & Drop handlers\n    const onDragEnter = e => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      console.log('Drag enter event:', e.dataTransfer?.types)\n\n      // Check if files are being dragged\n      if (e.dataTransfer && e.dataTransfer.types.includes('Files')) {\n        dragCounter.value++\n        console.log('Drag counter:', dragCounter.value)\n        if (dragCounter.value === 1) {\n          isDragOver.value = true\n          isDragging.value = true\n          console.log('Drag over state set to true')\n        }\n      }\n    }\n\n    const onDragOver = e => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (e.dataTransfer && e.dataTransfer.types.includes('Files')) {\n        e.dataTransfer.dropEffect = 'copy'\n        isDragOver.value = true\n      }\n    }\n\n    const onDragLeave = e => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      console.log('Drag leave event', e.relatedTarget)\n\n      // Only reduce counter if leaving the main drop area\n      if (!e.currentTarget.contains(e.relatedTarget)) {\n        dragCounter.value--\n        console.log('Drag counter after leave:', dragCounter.value)\n        if (dragCounter.value <= 0) {\n          dragCounter.value = 0\n          isDragOver.value = false\n          isDragging.value = false\n          console.log('Drag over state set to false')\n        }\n      }\n    }\n\n    const onDrop = e => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      console.log('Drop event triggered', e.dataTransfer.files)\n\n      // Reset drag state\n      isDragOver.value = false\n      isDragging.value = false\n      dragCounter.value = 0\n\n      const files = Array.from(e.dataTransfer.files)\n      console.log('Dropped files:', files)\n\n      if (files.length > 0) {\n        // Validate file types\n        const validFiles = files.filter(file => {\n          const fileType = file.type\n          const fileName = file.name.toLowerCase()\n\n          // Check if it's a video file\n          if (fileType.startsWith('video/')) {\n            return true\n          }\n\n          // Check if it's an audio file\n          if (fileType.startsWith('audio/')) {\n            return true\n          }\n\n          // Check by file extension if MIME type is not reliable\n          const supportedExtensions = [\n            '.mp4',\n            '.avi',\n            '.mov',\n            '.mkv',\n            '.wmv',\n            '.flv',\n            '.webm',\n            '.mp3',\n            '.wav',\n            '.m4a',\n            '.aac',\n            '.flac',\n            '.ogg',\n            '.wma'\n          ]\n          return supportedExtensions.some(ext => fileName.endsWith(ext))\n        })\n\n        if (validFiles.length === 0) {\n          toast.add({\n            severity: 'warn',\n            summary: '無効なファイル形式',\n            detail: '動画・音声ファイルのみアップロード可能です',\n            life: 3000\n          })\n          return\n        }\n\n        if (validFiles.length !== files.length) {\n          toast.add({\n            severity: 'warn',\n            summary: '一部ファイルをスキップ',\n            detail: `${files.length - validFiles.length}個のファイルは動画・音声ファイルではないためスキップされました`,\n            life: 4000\n          })\n        }\n\n        // Add files to selected files\n        selectedFiles.value = [...selectedFiles.value, ...validFiles]\n        uploadProgress.value = []\n\n        // Update the PrimeVue FileUpload component directly\n        if (fileUpload.value && validFiles.length > 0) {\n          // Convert File objects to the format expected by PrimeVue\n          const formattedFiles = validFiles.map(file => ({\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            lastModified: file.lastModified,\n            objectURL: file // Store the actual file\n          }))\n\n          // Set files on the PrimeVue component\n          if (fileUpload.value.files) {\n            fileUpload.value.files.push(...formattedFiles)\n          } else {\n            fileUpload.value.files = formattedFiles\n          }\n\n          // Trigger the onSelect event manually\n          onSelect({ files: validFiles })\n        }\n\n        toast.add({\n          severity: 'success',\n          summary: 'ファイル追加完了',\n          detail: `${validFiles.length}個のファイルが追加されました`,\n          life: 3000\n        })\n      }\n    }\n\n    const openFileDialog = accept => {\n      triggerFileSelect()\n    }\n\n    const showRecentFiles = () => {\n      toast.add({\n        severity: 'info',\n        summary: '機能準備中',\n        detail: '最近のファイル機能は準備中です',\n        life: 3000\n      })\n    }\n\n    return {\n      fileUpload,\n      selectedFiles,\n      uploadProgress,\n      loading,\n      onSelect,\n      onClear,\n      onUpload,\n      removeFile,\n      startUpload,\n      formatFileSize,\n      getStatusSeverity,\n      getStatusLabel,\n      triggerFileSelect,\n      isDragOver,\n      isDragging,\n      onDragEnter,\n      onDragOver,\n      onDragLeave,\n      onDrop,\n      openFileDialog,\n      showRecentFiles\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-uploader {\n  margin-bottom: 1rem;\n  position: relative;\n  transition: all 0.3s ease;\n  border-radius: 16px;\n}\n\n.file-uploader.drag-active {\n  box-shadow: 0 0 40px rgba(16, 185, 129, 0.3);\n  transform: scale(1.02);\n}\n\n.file-uploader.drag-active .upload-card {\n  border: 3px solid var(--success-400);\n  box-shadow: 0 10px 30px rgba(16, 185, 129, 0.2);\n}\n\n.upload-card {\n  border: none;\n  box-shadow:\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  border-radius: 16px;\n  overflow: hidden;\n}\n\n.upload-container {\n  padding: 0;\n}\n\n/* Header Section */\n.upload-header {\n  padding: 20px 20px 16px 20px;\n  margin: 0 -20px 16px -20px;\n  background: linear-gradient(\n    135deg,\n    var(--primary-700) 0%,\n    var(--secondary-700) 100%\n  );\n  color: white;\n  border-bottom: none;\n  border-radius: var(--radius-xl) var(--radius-xl) 0 0;\n  text-align: center;\n  position: relative;\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n/* Dark overlay for better text contrast */\n.upload-header::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.1);\n  pointer-events: none;\n}\n\n.upload-header::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 100\" fill=\"white\" opacity=\"0.1\"><polygon points=\"0,100 1000,0 1000,100\"/></svg>')\n    no-repeat center bottom;\n  background-size: cover;\n}\n\n.title-section {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.75rem;\n  margin-bottom: 0.75rem;\n  position: relative;\n  z-index: 2;\n}\n\n.title-icon {\n  font-size: 2rem;\n  opacity: 1;\n  color: white;\n  position: relative;\n  z-index: 2;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n\n.upload-title {\n  font-size: 1.75rem;\n  font-weight: 700;\n  margin: 0;\n  line-height: 1.2;\n  color: white;\n  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  z-index: 2;\n}\n\n.upload-description {\n  font-size: 1rem;\n  opacity: 1;\n  margin: 0;\n  font-weight: 500;\n  color: white;\n  text-shadow: 0 1px 4px rgba(0, 0, 0, 0.25);\n  position: relative;\n  z-index: 2;\n}\n\n/* Upload Area */\n.upload-area {\n  padding: 0.75rem;\n  position: relative;\n  border-radius: var(--radius-2xl);\n  transition: all 0.3s ease;\n}\n\n:deep(.custom-file-upload) {\n  width: 100%;\n}\n\n:deep(.custom-file-upload .p-fileupload-buttonbar) {\n  display: none;\n}\n\n:deep(.custom-file-upload .p-fileupload-content) {\n  border: none;\n  background: none;\n  padding: 0;\n}\n\n/* Disable PrimeVue's built-in drag and drop */\n:deep(.custom-file-upload .p-fileupload-content) {\n  pointer-events: auto;\n}\n\n.upload-dropzone {\n  padding: 32px 20px;\n  margin: 0 -20px;\n  border: 2px dashed var(--gray-300);\n  border-radius: var(--radius-lg);\n  background: var(--gray-50);\n  transition: all var(--transition-normal);\n  text-align: center;\n  min-height: 350px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.upload-dropzone::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: repeating-linear-gradient(\n    45deg,\n    transparent,\n    transparent 10px,\n    rgba(99, 102, 241, 0.05) 10px,\n    rgba(99, 102, 241, 0.05) 20px\n  );\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n}\n\n.upload-dropzone:hover {\n  border-color: var(--primary-400);\n  background: linear-gradient(\n    135deg,\n    var(--primary-50) 0%,\n    var(--primary-100) 100%\n  );\n  transform: translateY(-4px);\n  box-shadow: 0 20px 40px -12px rgba(99, 102, 241, 0.25);\n}\n\n.upload-dropzone:hover::after {\n  opacity: 1;\n}\n\n.upload-dropzone.dragover {\n  border-color: var(--success-500);\n  background: linear-gradient(\n    135deg,\n    var(--success-50) 0%,\n    var(--success-100) 100%\n  );\n  transform: translateY(-6px) scale(1.02);\n  box-shadow: 0 25px 50px -12px rgba(16, 185, 129, 0.35);\n  border-style: solid;\n  border-width: 4px;\n  animation: dragPulse 1s ease-in-out infinite;\n}\n\n.upload-dropzone.dragover::after {\n  opacity: 1;\n  background: repeating-linear-gradient(\n    45deg,\n    transparent,\n    transparent 10px,\n    rgba(16, 185, 129, 0.1) 10px,\n    rgba(16, 185, 129, 0.1) 20px\n  );\n}\n\n@keyframes dragPulse {\n  0%,\n  100% {\n    box-shadow: 0 25px 50px -12px rgba(16, 185, 129, 0.35);\n  }\n  50% {\n    box-shadow: 0 30px 60px -12px rgba(16, 185, 129, 0.45);\n  }\n}\n\n.upload-dropzone::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent,\n    rgba(255, 255, 255, 0.4),\n    transparent\n  );\n  transition: left 0.8s ease-in-out;\n}\n\n.upload-dropzone:hover::before {\n  left: 100%;\n}\n\n/* Floating Background Elements */\n.dropzone-bg-elements {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.floating-element {\n  position: absolute;\n  border-radius: 50%;\n  background: linear-gradient(\n    45deg,\n    rgba(102, 126, 234, 0.1),\n    rgba(118, 75, 162, 0.1)\n  );\n  animation: float 6s ease-in-out infinite;\n}\n\n.element-1 {\n  width: 80px;\n  height: 80px;\n  top: 20%;\n  left: 10%;\n  animation-delay: 0s;\n}\n\n.element-2 {\n  width: 60px;\n  height: 60px;\n  top: 60%;\n  right: 15%;\n  animation-delay: 2s;\n}\n\n.element-3 {\n  width: 100px;\n  height: 100px;\n  bottom: 25%;\n  left: 15%;\n  animation-delay: 4s;\n}\n\n@keyframes float {\n  0%,\n  100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  33% {\n    transform: translateY(-20px) rotate(120deg);\n  }\n  66% {\n    transform: translateY(10px) rotate(240deg);\n  }\n}\n\n.dropzone-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1.5rem;\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  max-width: 500px;\n}\n\n.upload-icon-container {\n  position: relative;\n  margin-bottom: 0.5rem;\n}\n\n.icon-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.upload-icon {\n  font-size: 5rem;\n  color: var(--brand-500);\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  z-index: 1;\n}\n\n.upload-icon.bounce {\n  animation: bounce 0.6s ease-in-out;\n}\n\n.icon-glow {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 120px;\n  height: 120px;\n  background: radial-gradient(\n    circle,\n    rgba(102, 126, 234, 0.2) 0%,\n    transparent 70%\n  );\n  border-radius: 50%;\n  opacity: 0;\n  transition: opacity 0.4s ease;\n}\n\n.upload-dropzone:hover .upload-icon {\n  transform: scale(1.15);\n  color: var(--brand-400);\n}\n\n.upload-dropzone:hover .icon-glow {\n  opacity: 1;\n}\n\n.upload-dropzone.dragover .upload-icon {\n  color: var(--success-500);\n  transform: scale(1.2);\n}\n\n@keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-20px);\n  }\n  60% {\n    transform: translateY(-10px);\n  }\n}\n\n.upload-text-container {\n  text-align: center;\n  margin-bottom: 0.5rem;\n}\n\n.upload-text {\n  font-size: 1.4rem;\n  font-weight: 700;\n  color: var(--gray-700);\n  margin: 0 0 0.75rem 0;\n  line-height: 1.3;\n  transition: all 0.3s ease;\n}\n\n.upload-text.highlight {\n  color: var(--success-500);\n  transform: scale(1.08);\n  text-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);\n}\n\n.upload-subtext {\n  font-size: 1rem;\n  color: var(--gray-500);\n  margin: 0 0 1rem 0;\n  line-height: 1.5;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.drag-hint {\n  margin-top: 1rem;\n  animation: pulseGlow 1.5s ease-in-out infinite;\n}\n\n.drag-hint-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  background: linear-gradient(\n    135deg,\n    rgba(16, 185, 129, 0.1) 0%,\n    rgba(16, 185, 129, 0.2) 100%\n  );\n  padding: 1rem 2rem;\n  border-radius: 20px;\n  border: 2px dashed var(--success-400);\n  color: var(--success-700);\n  font-weight: 600;\n  backdrop-filter: blur(10px);\n}\n\n.drag-arrow {\n  font-size: 2rem;\n  animation: bounce 1s ease-in-out infinite;\n  color: var(--success-500);\n}\n\n@keyframes pulseGlow {\n  0%,\n  100% {\n    opacity: 0.8;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.05);\n  }\n}\n\n@keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-10px);\n  }\n  60% {\n    transform: translateY(-5px);\n  }\n}\n\n/* Upload Actions Container */\n.upload-actions-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1.5rem;\n  width: 100%;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 0.5rem 0;\n}\n\n.divider::before,\n.divider::after {\n  content: '';\n  flex: 1;\n  height: 1px;\n  background: linear-gradient(to right, transparent, var(--gray-200), transparent);\n}\n\n.divider span {\n  padding: 0 1rem;\n  color: var(--gray-400);\n  font-size: 0.9rem;\n  font-weight: 500;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 20px;\n}\n\n.quick-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.quick-action-btn {\n  padding: 0.75rem 1.5rem;\n  font-size: 0.9rem;\n  border-radius: 12px;\n  background: rgba(255, 255, 255, 0.9);\n  border: 1px solid var(--gray-300);\n  color: var(--gray-700);\n  font-weight: 500;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n}\n\n.quick-action-btn:hover {\n  background: white;\n  border-color: var(--primary-600);\n  color: var(--primary-700);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.15);\n}\n\n.upload-button-primary {\n  padding: 0.75rem 2rem;\n  font-size: 1rem;\n  font-weight: 600;\n  border-radius: 10px;\n  background: linear-gradient(135deg, var(--brand-500) 0%, var(--brand-700) 100%);\n  border: none;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n.upload-button-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n}\n\n.upload-note {\n  margin: 20px -24px 0 -24px;\n  padding: 16px 20px;\n  background: linear-gradient(135deg, var(--warning-50) 0%, var(--warning-100) 100%);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--warning-200);\n  border-left: 4px solid var(--warning-500);\n}\n\n.note-content {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 1rem 1.25rem;\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(229, 231, 235, 0.6);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);\n}\n\n.note-content i {\n  font-size: 1.1rem;\n  color: var(--brand-500);\n  flex-shrink: 0;\n}\n\n.note-text {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  font-size: 0.9rem;\n  line-height: 1.4;\n}\n\n.supported-formats {\n  color: var(--gray-700);\n  font-weight: 500;\n}\n\n.file-limit {\n  color: var(--gray-700);\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n/* Drag Overlay */\n.drag-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(\n    circle at center,\n    rgba(16, 185, 129, 0.15) 0%,\n    rgba(16, 185, 129, 0.05) 100%\n  );\n  backdrop-filter: blur(10px);\n  border-radius: var(--radius-2xl);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  animation: overlaySlideIn 0.3s ease-out;\n  border: 3px solid var(--success-400);\n}\n\n@keyframes overlaySlideIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n    backdrop-filter: blur(0px);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n    backdrop-filter: blur(10px);\n  }\n}\n\n.drag-overlay-content {\n  text-align: center;\n  color: var(--success-700);\n  font-weight: 700;\n  padding: var(--space-8);\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-lg);\n  border: 2px solid var(--success-200);\n  backdrop-filter: blur(5px);\n}\n\n.drag-icon {\n  font-size: 5rem;\n  margin-bottom: var(--space-4);\n  animation: dragBounce 0.8s ease-in-out infinite;\n  filter: drop-shadow(0 4px 8px rgba(16, 185, 129, 0.3));\n}\n\n@keyframes dragBounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    transform: translateY(0) scale(1);\n  }\n  40% {\n    transform: translateY(-15px) scale(1.1);\n  }\n  60% {\n    transform: translateY(-8px) scale(1.05);\n  }\n}\n\n.drag-overlay p {\n  font-size: 1.5rem;\n  margin: 0 0 1rem 0;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  letter-spacing: 0.025em;\n}\n\n.drop-hint {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 1rem 2rem;\n  border-radius: 15px;\n  border: 2px dashed var(--success-400);\n  color: var(--success-700);\n  font-weight: 600;\n  animation: pulseGlow 1.5s ease-in-out infinite;\n}\n\n.drop-arrow {\n  font-size: 1.5rem;\n  animation: bounce 1s ease-in-out infinite;\n  color: var(--success-500);\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* Selected Files Section */\n.selected-files-section {\n  margin-top: 1.5rem;\n  padding: 0 1rem;\n}\n\n.selected-files-header {\n  margin-bottom: 1rem;\n}\n\n.selected-files-header h4 {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0;\n  color: var(--success-600);\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.selected-files-list {\n  display: grid;\n  gap: 0.75rem;\n}\n\n.file-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.25rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  border: 1px solid var(--gray-200);\n  transition: all 0.2s ease;\n}\n\n.file-item:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);\n}\n\n.file-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  flex: 1;\n}\n\n.file-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  background: linear-gradient(135deg, var(--brand-500) 0%, var(--brand-700) 100%);\n  border-radius: 10px;\n  color: white;\n  font-size: 1.5rem;\n}\n\n.file-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.file-name {\n  font-weight: 600;\n  color: var(--gray-700);\n  font-size: 1rem;\n  line-height: 1.2;\n}\n\n.file-size {\n  font-size: 0.9rem;\n  color: var(--gray-500);\n}\n\n.file-remove-btn {\n  flex-shrink: 0;\n  border-radius: 8px;\n  min-width: 44px;\n  height: 44px;\n  background: rgba(239, 68, 68, 0.1) !important;\n  border: 2px solid var(--error-300) !important;\n  color: var(--error-600) !important;\n  transition: all 0.3s ease;\n}\n\n.file-remove-btn:hover:not(:disabled) {\n  background: var(--error-500) !important;\n  border-color: var(--error-500) !important;\n  color: white !important;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);\n}\n\n.file-remove-btn:active {\n  transform: translateY(0);\n}\n\n.file-remove-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n/* Upload Progress Section */\n.upload-progress-section {\n  margin-top: 1.5rem;\n  padding: 0 1rem;\n}\n\n.progress-header h4 {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0 0 1rem 0;\n  color: var(--info-500);\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.progress-list {\n  display: grid;\n  gap: 1rem;\n}\n\n.progress-item {\n  background: white;\n  border-radius: 12px;\n  padding: 1.25rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  border: 1px solid var(--gray-200);\n}\n\n.progress-info {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.progress-file-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.progress-name {\n  font-weight: 600;\n  color: var(--gray-700);\n  font-size: 1rem;\n}\n\n.progress-percent {\n  font-weight: 700;\n  color: var(--info-500);\n  font-size: 1.1rem;\n}\n\n.progress-bar {\n  border-radius: 6px;\n  height: 8px;\n}\n\n.progress-status {\n  display: flex;\n  justify-content: flex-end;\n}\n\n/* Upload Actions */\n.upload-actions {\n  margin-top: 2rem;\n  text-align: center;\n  padding: 0 1rem 1rem;\n}\n\n.upload-start-button {\n  padding: 1rem 2.5rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border-radius: 12px;\n  background: linear-gradient(135deg, var(--success-600) 0%, var(--success-700) 100%);\n  border: none;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(5, 150, 105, 0.3);\n  min-width: 200px;\n}\n\n.upload-start-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(5, 150, 105, 0.4);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .upload-header {\n    padding: 2rem 1rem 1rem;\n    margin: -1.5rem -1.5rem 1rem -1.5rem;\n  }\n\n  .upload-area {\n    padding: 0.75rem;\n  }\n\n  .upload-title {\n    font-size: 1.5rem;\n  }\n\n  .upload-description {\n    font-size: 0.9rem;\n  }\n\n  .upload-dropzone {\n    padding: 1.5rem 1rem;\n    min-height: 300px;\n  }\n\n  .upload-icon {\n    font-size: 3rem;\n  }\n\n  .upload-text {\n    font-size: 1.1rem;\n  }\n\n  .upload-subtext {\n    font-size: 0.9rem;\n  }\n\n  .dropzone-content {\n    gap: 1.5rem;\n  }\n\n  .quick-actions {\n    flex-direction: column;\n    gap: 0.75rem;\n    width: 100%;\n  }\n\n  .quick-action-btn {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .upload-button-primary {\n    padding: 0.75rem 1.5rem;\n    font-size: 0.9rem;\n  }\n\n  .file-item {\n    padding: 0.75rem 1rem;\n  }\n\n  .file-info {\n    flex: 1;\n  }\n\n  .file-remove-btn {\n    min-width: 36px;\n    height: 36px;\n  }\n\n  .file-icon {\n    width: 40px;\n    height: 40px;\n    font-size: 1.25rem;\n  }\n\n  .progress-file-info {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.25rem;\n  }\n\n  .upload-start-button {\n    width: 100%;\n    padding: 1rem;\n    font-size: 1rem;\n  }\n\n  .selected-files-section,\n  .upload-progress-section,\n  .upload-actions {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .upload-header {\n    padding: 1.5rem 0.75rem 0.75rem;\n  }\n\n  .title-section {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .upload-title {\n    font-size: 1.25rem;\n  }\n\n  .upload-dropzone {\n    padding: 1.5rem 0.75rem;\n    min-height: 300px;\n  }\n\n  .dropzone-content {\n    gap: 1rem;\n  }\n\n  .upload-icon {\n    font-size: 2.5rem;\n  }\n\n  .upload-text {\n    font-size: 1rem;\n  }\n\n  .upload-subtext {\n    font-size: 0.85rem;\n  }\n\n  .upload-button-primary {\n    padding: 0.75rem 1.25rem;\n    font-size: 0.9rem;\n    width: 100%;\n  }\n\n  .note-content {\n    padding: 0.75rem 1rem;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .note-text {\n    font-size: 0.8rem;\n  }\n\n  .drag-overlay p {\n    font-size: 1rem;\n  }\n\n  .drag-icon {\n    font-size: 3rem;\n  }\n}\n\n/* FileUploaderカードの統一余白設定 */\n.file-uploader :deep(.p-card) {\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-md);\n  border: 1px solid var(--gray-200);\n  background: white;\n  transition: all var(--transition-normal);\n}\n\n.file-uploader :deep(.p-card-body) {\n  padding: 0;\n}\n\n.file-uploader :deep(.p-card-title) {\n  padding: 20px 24px 0 24px;\n  margin: 0 0 16px 0;\n  color: var(--gray-900);\n  font-weight: 600;\n  font-size: 1.2rem;\n}\n\n.file-uploader :deep(.p-card-content) {\n  padding: 0 24px 24px 24px;\n  color: var(--gray-700);\n}\n\n/* ドロップゾーンの調整 */\n.upload-dropzone {\n  padding: 32px 20px;\n  margin: 0 -20px;\n  border: 2px dashed var(--gray-300);\n  border-radius: var(--radius-lg);\n  background: var(--gray-50);\n  transition: all var(--transition-normal);\n  text-align: center;\n  min-height: 350px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* ファイルリストの調整 */\n.file-list {\n  margin: 20px -24px 0 -24px;\n  padding: 20px 24px;\n  background: var(--gray-50);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--gray-200);\n}\n\n/* 注意事項の調整 */\n.upload-note {\n  margin: 20px -24px 0 -24px;\n  padding: 16px 20px;\n  background: linear-gradient(135deg, var(--warning-50) 0%, var(--warning-100) 100%);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--warning-200);\n  border-left: 4px solid var(--warning-500);\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/MarkdownDemo.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/MarkdownRenderer.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/MinutesViewer.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/TaskDetailModal.vue","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'watch' is defined but never used.","line":180,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":180,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Dialog\n    v-model:visible=\"isVisible\"\n    :header=\"task ? `タスク詳細: ${task.video_filename}` : 'タスク詳細'\"\n    :modal=\"true\"\n    :closable=\"true\"\n    :draggable=\"false\"\n    class=\"task-detail-modal\"\n    :style=\"{ width: '90vw', maxWidth: '800px' }\"\n  >\n    <div v-if=\"task\" class=\"task-detail-content\">\n      <!-- Task Overview -->\n      <div class=\"task-overview\">\n        <div class=\"overview-item\">\n          <label>ファイル名:</label>\n          <span class=\"filename\">{{ task.video_filename }}</span>\n        </div>\n        <div class=\"overview-item\">\n          <label>ファイルサイズ:</label>\n          <span>{{ formatFileSize(task.video_size) }}</span>\n        </div>\n        <div class=\"overview-item\">\n          <label>アップロード日時:</label>\n          <span>{{ formatDateTime(task.upload_timestamp) }}</span>\n        </div>\n        <div class=\"overview-item\">\n          <label>現在のステータス:</label>\n          <Badge\n            :value=\"getStatusLabel(task.status)\"\n            :severity=\"getStatusSeverity(task.status)\"\n          />\n        </div>\n        <div v-if=\"task.status === 'processing'\" class=\"overview-item\">\n          <label>現在の処理:</label>\n          <span>{{ getStepLabel(task.current_step) }}</span>\n        </div>\n      </div>\n\n      <!-- Progress Timeline -->\n      <div class=\"progress-section\">\n        <h3>処理進捗</h3>\n\n        <!-- Overall Progress -->\n        <div class=\"overall-progress\">\n          <div class=\"progress-header\">\n            <span>全体進捗</span>\n            <span class=\"progress-percentage\"\n              >{{ task.overall_progress || 0 }}%</span\n            >\n          </div>\n          <ProgressBar\n            :value=\"task.overall_progress || 0\"\n            :showValue=\"false\"\n            class=\"overall-progress-bar\"\n          />\n        </div>\n\n        <!-- Step Timeline -->\n        <Timeline :value=\"processSteps\" layout=\"vertical\" class=\"step-timeline\">\n          <template #marker=\"{ item }\">\n            <div class=\"step-marker\" :class=\"getStepMarkerClass(item)\">\n              <i :class=\"getStepIcon(item)\"></i>\n            </div>\n          </template>\n\n          <template #content=\"{ item }\">\n            <div class=\"step-content\">\n              <div class=\"step-header\">\n                <h4>{{ item.label }}</h4>\n                <Badge\n                  :value=\"getStepStatusLabel(item.status)\"\n                  :severity=\"getStepStatusSeverity(item.status)\"\n                />\n              </div>\n\n              <div v-if=\"item.status === 'processing'\" class=\"step-progress\">\n                <div class=\"step-progress-header\">\n                  <span class=\"step-progress-label\">進捗</span>\n                  <span class=\"step-progress-value\"\n                    >{{ item.progress || 0 }}%</span\n                  >\n                </div>\n                <ProgressBar :value=\"item.progress\" :showValue=\"false\" />\n                <small v-if=\"item.estimated_time\" class=\"eta\">\n                  残り約{{ item.estimated_time }}分\n                </small>\n              </div>\n\n              <div v-if=\"item.duration\" class=\"step-duration\">\n                処理時間: {{ item.duration }}\n              </div>\n\n              <div v-if=\"item.error\" class=\"step-error\">\n                <i class=\"pi pi-exclamation-triangle\"></i>\n                {{ item.error }}\n              </div>\n            </div>\n          </template>\n        </Timeline>\n      </div>\n\n      <!-- Error Details -->\n      <div\n        v-if=\"task.status === 'failed' && task.error_message\"\n        class=\"error-section\"\n      >\n        <h3>エラー詳細</h3>\n        <Message severity=\"error\" :closable=\"false\" class=\"error-message\">\n          <div class=\"error-content\">\n            <strong>エラーメッセージ:</strong>\n            <pre>{{ task.error_message }}</pre>\n          </div>\n        </Message>\n      </div>\n\n      <!-- Results Preview -->\n      <div v-if=\"task.status === 'completed'\" class=\"results-section\">\n        <h3>処理結果</h3>\n        <div class=\"result-stats\">\n          <div class=\"result-item\">\n            <label>処理時間:</label>\n            <span>{{ calculateTotalDuration(task) }}</span>\n          </div>\n          <div v-if=\"task.transcription_length\" class=\"result-item\">\n            <label>文字起こし文字数:</label>\n            <span>{{ task.transcription_length.toLocaleString() }}文字</span>\n          </div>\n          <div v-if=\"task.minutes_length\" class=\"result-item\">\n            <label>議事録文字数:</label>\n            <span>{{ task.minutes_length.toLocaleString() }}文字</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template #footer>\n      <div class=\"modal-actions\">\n        <!-- Retry Button (for failed tasks) -->\n        <Button\n          v-if=\"task && task.status === 'failed'\"\n          label=\"再実行\"\n          icon=\"pi pi-refresh\"\n          class=\"p-button-warning\"\n          @click=\"handleRetry\"\n          :loading=\"retrying\"\n        />\n\n        <!-- View Minutes Button (for completed tasks) -->\n        <Button\n          v-if=\"task && task.status === 'completed'\"\n          label=\"議事録を見る\"\n          icon=\"pi pi-file\"\n          class=\"p-button-success\"\n          @click=\"handleViewMinutes\"\n        />\n\n        <!-- Delete Button -->\n        <Button\n          v-if=\"task\"\n          label=\"削除\"\n          icon=\"pi pi-trash\"\n          class=\"p-button-danger p-button-outlined\"\n          @click=\"handleDelete\"\n          :disabled=\"task.status === 'processing'\"\n        />\n\n        <!-- Close Button -->\n        <Button\n          label=\"閉じる\"\n          icon=\"pi pi-times\"\n          class=\"p-button-secondary\"\n          @click=\"close\"\n        />\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue'\nimport Dialog from 'primevue/dialog'\nimport Timeline from 'primevue/timeline'\nimport ProgressBar from 'primevue/progressbar'\nimport Badge from 'primevue/badge'\nimport Button from 'primevue/button'\nimport Message from 'primevue/message'\n\nexport default {\n  name: 'TaskDetailModal',\n  components: {\n    Dialog,\n    Timeline,\n    ProgressBar,\n    Badge,\n    Button,\n    Message\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    task: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:visible', 'retry', 'delete', 'view-minutes'],\n  setup(props, { emit }) {\n    const retrying = ref(false)\n\n    const isVisible = computed({\n      get: () => props.visible,\n      set: value => emit('update:visible', value)\n    })\n\n    const processSteps = computed(() => {\n      if (!props.task) return []\n\n      const steps = [\n        {\n          name: 'upload',\n          label: 'ファイルアップロード',\n          icon: 'pi-cloud-upload'\n        },\n        {\n          name: 'audio_extraction',\n          label: '音声抽出',\n          icon: 'pi-volume-up'\n        },\n        {\n          name: 'transcription',\n          label: '文字起こし',\n          icon: 'pi-microphone'\n        },\n        {\n          name: 'minutes_generation',\n          label: '議事録生成',\n          icon: 'pi-file'\n        }\n      ]\n\n      // Map steps with actual task data\n      return steps.map(step => {\n        const stepData = props.task.steps?.find(s => s.name === step.name) || {}\n        return {\n          ...step,\n          status: stepData.status || 'pending',\n          progress: stepData.progress || 0,\n          started_at: stepData.started_at,\n          completed_at: stepData.completed_at,\n          duration: stepData.duration,\n          error: stepData.error,\n          estimated_time: stepData.estimated_time\n        }\n      })\n    })\n\n    const getStatusLabel = status => {\n      const labels = {\n        pending: '待機中',\n        processing: '処理中',\n        completed: '完了',\n        failed: 'エラー'\n      }\n      return labels[status] || status\n    }\n\n    const getStatusSeverity = status => {\n      const severities = {\n        pending: 'info',\n        processing: 'warning',\n        completed: 'success',\n        failed: 'danger'\n      }\n      return severities[status] || 'info'\n    }\n\n    const getStepLabel = step => {\n      const labels = {\n        upload: 'アップロード中',\n        audio_extraction: '音声抽出中',\n        transcription: '文字起こし中',\n        minutes_generation: '議事録生成中'\n      }\n      return labels[step] || step\n    }\n\n    const getStepStatusLabel = status => {\n      const labels = {\n        pending: '待機',\n        processing: '処理中',\n        completed: '完了',\n        failed: 'エラー'\n      }\n      return labels[status] || status\n    }\n\n    const getStepStatusSeverity = status => {\n      const severities = {\n        pending: null,\n        processing: 'warning',\n        completed: 'success',\n        failed: 'danger'\n      }\n      return severities[status]\n    }\n\n    const getStepMarkerClass = step => {\n      return {\n        'step-pending': step.status === 'pending',\n        'step-processing': step.status === 'processing',\n        'step-completed': step.status === 'completed',\n        'step-failed': step.status === 'failed'\n      }\n    }\n\n    const getStepIcon = step => {\n      return `pi ${step.icon}`\n    }\n\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDateTime = timestamp => {\n      if (!timestamp) return ''\n      const date = new Date(timestamp)\n      return date.toLocaleString('ja-JP', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }\n\n    const calculateTotalDuration = task => {\n      if (!task.processing_started || !task.processing_completed) {\n        return '計算中...'\n      }\n\n      const start = new Date(task.processing_started)\n      const end = new Date(task.processing_completed)\n      const durationMs = end - start\n      const minutes = Math.floor(durationMs / 60000)\n      const seconds = Math.floor((durationMs % 60000) / 1000)\n\n      return `${minutes}分${seconds}秒`\n    }\n\n    const close = () => {\n      isVisible.value = false\n    }\n\n    const handleRetry = async () => {\n      if (!props.task) return\n\n      retrying.value = true\n      try {\n        emit('retry', props.task)\n        close()\n      } finally {\n        retrying.value = false\n      }\n    }\n\n    const handleDelete = () => {\n      if (!props.task) return\n\n      emit('delete', props.task)\n      close()\n    }\n\n    const handleViewMinutes = () => {\n      if (!props.task) return\n\n      emit('view-minutes', props.task)\n      close()\n    }\n\n    return {\n      isVisible,\n      retrying,\n      processSteps,\n      getStatusLabel,\n      getStatusSeverity,\n      getStepLabel,\n      getStepStatusLabel,\n      getStepStatusSeverity,\n      getStepMarkerClass,\n      getStepIcon,\n      formatFileSize,\n      formatDateTime,\n      calculateTotalDuration,\n      close,\n      handleRetry,\n      handleDelete,\n      handleViewMinutes\n    }\n  }\n}\n</script>\n\n<style scoped>\n.task-detail-content {\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-8);\n}\n\n.task-overview {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: var(--space-6);\n  padding: var(--space-8);\n  background: linear-gradient(135deg, white 0%, var(--gray-50) 100%);\n  border-radius: var(--radius-xl);\n  border: 2px solid var(--gray-200);\n  box-shadow: var(--shadow-sm);\n  margin-bottom: var(--space-4);\n}\n\n.overview-item {\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: white;\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--gray-100);\n  transition: all var(--transition-fast);\n}\n\n.overview-item:hover {\n  border-color: var(--primary-200);\n  box-shadow: var(--shadow-sm);\n}\n\n.overview-item label {\n  font-weight: 700;\n  color: var(--gray-600);\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: var(--space-1);\n}\n\n.overview-item span {\n  font-size: 1rem;\n  color: var(--gray-800);\n  font-weight: 600;\n  line-height: 1.4;\n}\n\n/* Badge improvements in modal - 日本語対応 */\n:deep(.p-badge) {\n  /* 日本語テキストのはみ出し修正 */\n  line-height: 1.2 !important;\n  height: auto !important;\n  min-height: 1.5rem;\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  padding: 0.4rem 0.8rem !important;\n}\n\n:deep(.overview-item .p-badge) {\n  font-size: 0.8rem;\n  padding: 0.5rem 1rem;\n  font-weight: 600;\n  align-self: flex-start;\n}\n\n/* 処理中ステータスの色修正 - 白文字に統一 */\n:deep(.p-badge.p-badge-warning) {\n  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%) !important;\n  border-color: #fbbf24 !important;\n  color: #ffffff !important;\n  box-shadow: 0 2px 4px rgba(245, 158, 11, 0.2) !important;\n}\n\n/* 完了ステータスの色修正 */\n:deep(.p-badge.p-badge-success) {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;\n  border-color: #34d399 !important;\n  color: #ffffff !important;\n  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2) !important;\n}\n\n/* エラーステータスの色修正 */\n:deep(.p-badge.p-badge-danger) {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;\n  border-color: #f87171 !important;\n  color: #ffffff !important;\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2) !important;\n}\n\n/* 情報ステータスの色修正 */\n:deep(.p-badge.p-badge-info) {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%) !important;\n  border-color: #60a5fa !important;\n  color: #ffffff !important;\n  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.2) !important;\n}\n\n/* ステップヘッダー内のBadgeも同様に適用 */\n:deep(.step-header .p-badge.p-badge-warning) {\n  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%) !important;\n  border-color: #fbbf24 !important;\n  color: #ffffff !important;\n}\n\n:deep(.step-header .p-badge.p-badge-success) {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;\n  border-color: #34d399 !important;\n  color: #ffffff !important;\n}\n\n:deep(.step-header .p-badge.p-badge-danger) {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;\n  border-color: #f87171 !important;\n  color: #ffffff !important;\n}\n\n:deep(.step-header .p-badge.p-badge-info) {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%) !important;\n  border-color: #60a5fa !important;\n  color: #ffffff !important;\n}\n\n.filename {\n  font-weight: 500;\n  color: var(--gray-550);\n  word-break: break-all;\n}\n\n.progress-section h3 {\n  margin: 0 0 1.5rem 0;\n  color: var(--gray-700);\n  font-size: 1.2rem;\n  font-weight: 600;\n  border-bottom: 2px solid var(--gray-200);\n  padding-bottom: 0.5rem;\n}\n\n.overall-progress {\n  margin-bottom: 2rem;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, var(--gray-600-light) 0%, var(--gray-625-light) 100%);\n  border-radius: 12px;\n  border: 1px solid #e9ecef;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.progress-percentage {\n  font-weight: 600;\n  color: #6366f1;\n}\n\n.overall-progress-bar {\n  height: 12px;\n}\n\n.step-timeline {\n  margin-top: 1rem;\n}\n\n:deep(.step-timeline .p-timeline-event-marker) {\n  border: none;\n  padding: 0;\n}\n\n.step-marker {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  font-weight: bold;\n  border: 3px solid;\n  background: white;\n}\n\n.step-marker.step-pending {\n  border-color: #dee2e6;\n  color: #6c757d;\n}\n\n.step-marker.step-processing {\n  border-color: #ffc107;\n  color: #ffc107;\n  animation: pulse 2s infinite;\n}\n\n.step-marker.step-completed {\n  border-color: #28a745;\n  color: #28a745;\n  background: #d4edda;\n}\n\n.step-marker.step-failed {\n  border-color: #dc3545;\n  color: #dc3545;\n  background: #f8d7da;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.step-content {\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.step-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.step-header h4 {\n  margin: 0;\n  color: var(--gray-550);\n  font-size: 1rem;\n}\n\n.step-progress {\n  margin: 0.5rem 0;\n}\n\n.step-progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.step-progress-label {\n  font-size: 0.9rem;\n  color: var(--gray-600);\n  font-weight: 500;\n}\n\n.step-progress-value {\n  font-size: 0.9rem;\n  color: var(--primary-600);\n  font-weight: 600;\n}\n\n.eta {\n  display: block;\n  margin-top: 0.25rem;\n  color: var(--gray-650);\n}\n\n.step-duration {\n  font-size: 0.9rem;\n  color: var(--gray-650);\n  margin-top: 0.5rem;\n}\n\n.step-error {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #dc3545;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n}\n\n.error-section h3 {\n  margin: 0 0 1rem 0;\n  color: var(--gray-550);\n  font-size: 1.1rem;\n}\n\n.error-message {\n  margin: 0;\n}\n\n.error-content pre {\n  margin: 0.5rem 0 0 0;\n  white-space: pre-wrap;\n  font-family: 'Courier New', monospace;\n  font-size: 0.9rem;\n}\n\n.results-section h3 {\n  margin: 0 0 1rem 0;\n  color: #495057;\n  font-size: 1.1rem;\n}\n\n.result-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  padding: 1rem;\n  background: var(--gray-600-light);\n  border-radius: 8px;\n}\n\n.result-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.result-item label {\n  font-weight: 600;\n  color: #6c757d;\n  font-size: 0.9rem;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n}\n\n@media (max-width: 768px) {\n  :deep(.task-detail-modal .p-dialog) {\n    width: 95vw !important;\n    margin: 1rem;\n  }\n\n  .task-overview {\n    grid-template-columns: 1fr;\n  }\n\n  .result-stats {\n    grid-template-columns: 1fr;\n  }\n\n  .step-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .modal-actions {\n    justify-content: center;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/components/TaskList.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/main.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/router/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/services/api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/services/websocket.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'taskId' is defined but never used.","line":54,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":54,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"class WebSocketManager {\n  constructor() {\n    this.connections = new Map()\n    this.listeners = new Map()\n  }\n\n  connect(taskId, callbacks = {}) {\n    if (this.connections.has(taskId)) {\n      return this.connections.get(taskId)\n    }\n\n    const wsUrl = `${import.meta.env.VITE_WS_URL || 'ws://localhost:8000'}/api/v1/minutes/ws/${taskId}`\n    const ws = new WebSocket(wsUrl)\n\n    ws.onopen = () => {\n      console.log(`WebSocket connected for task ${taskId}`)\n      callbacks.onOpen?.(taskId)\n    }\n\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data)\n        console.log(`WebSocket message for task ${taskId}:`, data)\n        callbacks.onMessage?.(data)\n      } catch (error) {\n        console.error('Failed to parse WebSocket message:', error)\n      }\n    }\n\n    ws.onclose = () => {\n      console.log(`WebSocket closed for task ${taskId}`)\n      this.connections.delete(taskId)\n      callbacks.onClose?.(taskId)\n    }\n\n    ws.onerror = error => {\n      console.error(`WebSocket error for task ${taskId}:`, error)\n      callbacks.onError?.(error)\n    }\n\n    this.connections.set(taskId, ws)\n    return ws\n  }\n\n  disconnect(taskId) {\n    const ws = this.connections.get(taskId)\n    if (ws) {\n      ws.close()\n      this.connections.delete(taskId)\n    }\n  }\n\n  disconnectAll() {\n    this.connections.forEach((ws, taskId) => {\n      ws.close()\n    })\n    this.connections.clear()\n  }\n\n  isConnected(taskId) {\n    const ws = this.connections.get(taskId)\n    return ws && ws.readyState === WebSocket.OPEN\n  }\n}\n\nexport default new WebSocketManager()\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/stores/tasks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/utils/markdown.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'options' is assigned a value but never used.","line":121,"column":41,"nodeType":"Identifier","messageId":"unusedVar","endLine":121,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { marked } from 'marked'\nimport DOMPurify from 'dompurify'\nimport hljs from 'highlight.js'\n\n// Configure marked with custom renderer\nconst renderer = new marked.Renderer()\n\n// Custom heading renderer with anchors\nrenderer.heading = function (text, level) {\n  const id = text.toLowerCase().replace(/[^\\w]+/g, '-')\n  return `<h${level} id=\"${id}\" class=\"markdown-heading markdown-h${level}\">\n    <span class=\"heading-content\">${text}</span>\n  </h${level}>`\n}\n\n// Custom list renderer\nrenderer.list = function (body, ordered, start) {\n  const type = ordered ? 'ol' : 'ul'\n  const startatt = ordered && start !== 1 ? ` start=\"${start}\"` : ''\n  return `<${type}${startatt} class=\"markdown-list markdown-${type}\">\n    ${body}\n  </${type}>`\n}\n\n// Custom list item renderer\nrenderer.listitem = function (text) {\n  return `<li class=\"markdown-list-item\">${text}</li>`\n}\n\n// Custom paragraph renderer\nrenderer.paragraph = function (text) {\n  return `<p class=\"markdown-paragraph\">${text}</p>`\n}\n\n// Custom blockquote renderer\nrenderer.blockquote = function (quote) {\n  return `<blockquote class=\"markdown-blockquote\">\n    <div class=\"blockquote-indicator\"></div>\n    <div class=\"blockquote-content\">${quote}</div>\n  </blockquote>`\n}\n\n// Custom table renderer\nrenderer.table = function (header, body) {\n  return `<div class=\"markdown-table-wrapper\">\n    <table class=\"markdown-table\">\n      <thead class=\"markdown-table-header\">${header}</thead>\n      <tbody class=\"markdown-table-body\">${body}</tbody>\n    </table>\n  </div>`\n}\n\n// Custom code block renderer with syntax highlighting\nrenderer.code = function (code, language) {\n  const validLanguage = hljs.getLanguage(language) ? language : 'plaintext'\n  const highlighted = hljs.highlight(code, { language: validLanguage }).value\n\n  return `<div class=\"markdown-code-block\">\n    <div class=\"code-header\">\n      <span class=\"code-language\">${validLanguage}</span>\n      <button class=\"code-copy-btn\" onclick=\"copyCodeToClipboard(this)\">\n        <i class=\"pi pi-copy\"></i>\n        コピー\n      </button>\n    </div>\n    <pre class=\"code-content\"><code class=\"hljs language-${validLanguage}\">${highlighted}</code></pre>\n  </div>`\n}\n\n// Custom inline code renderer\nrenderer.codespan = function (code) {\n  return `<code class=\"markdown-inline-code\">${code}</code>`\n}\n\n// Custom strong renderer\nrenderer.strong = function (text) {\n  return `<strong class=\"markdown-strong\">${text}</strong>`\n}\n\n// Custom emphasis renderer\nrenderer.em = function (text) {\n  return `<em class=\"markdown-emphasis\">${text}</em>`\n}\n\n// Custom link renderer\nrenderer.link = function (href, title, text) {\n  const titleAttr = title ? ` title=\"${title}\"` : ''\n  return `<a href=\"${href}\"${titleAttr} class=\"markdown-link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    ${text}\n    <i class=\"pi pi-external-link\"></i>\n  </a>`\n}\n\n// Custom horizontal rule renderer\nrenderer.hr = function () {\n  return '<div class=\"markdown-divider\"><hr></div>'\n}\n\n// Configure marked options\nmarked.setOptions({\n  renderer: renderer,\n  highlight: function (code, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext'\n    return hljs.highlight(code, { language }).value\n  },\n  langPrefix: 'hljs language-',\n  pedantic: false,\n  gfm: true,\n  breaks: true,\n  sanitize: false,\n  smartypants: true,\n  xhtml: false\n})\n\n/**\n * Convert markdown to safe HTML\n * @param {string} markdown - The markdown text to convert\n * @param {object} options - Additional options\n * @returns {string} - Safe HTML string\n */\nexport function parseMarkdown(markdown, options = {}) {\n  if (!markdown || typeof markdown !== 'string') {\n    return ''\n  }\n\n  try {\n    // Parse markdown to HTML\n    let html = marked.parse(markdown)\n\n    // Sanitize HTML to prevent XSS attacks\n    html = DOMPurify.sanitize(html, {\n      ALLOWED_TAGS: [\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'p',\n        'br',\n        'strong',\n        'em',\n        'u',\n        's',\n        'ul',\n        'ol',\n        'li',\n        'blockquote',\n        'table',\n        'thead',\n        'tbody',\n        'tr',\n        'td',\n        'th',\n        'pre',\n        'code',\n        'a',\n        'hr',\n        'div',\n        'span',\n        'i',\n        'button'\n      ],\n      ALLOWED_ATTR: [\n        'href',\n        'title',\n        'target',\n        'rel',\n        'class',\n        'id',\n        'start',\n        'onclick'\n      ],\n      ALLOWED_URI_REGEXP:\n        /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.-]+(?:[^a-z+.-:]|$))/i\n    })\n\n    return html\n  } catch (error) {\n    console.error('Failed to parse markdown:', error)\n    return `<p class=\"markdown-error\">マークダウンの解析に失敗しました</p>`\n  }\n}\n\n/**\n * Extract table of contents from markdown\n * @param {string} markdown - The markdown text\n * @param {Object} options - Options for TOC generation\n * @returns {Array} - Array of heading objects\n */\nexport function extractTableOfContents(markdown, options = {}) {\n  if (!markdown) return []\n\n  const {\n    excludeTexts = ['会議情報', 'Meeting Information', '会議概要'],\n    minLevel = 1,\n    maxLevel = 3\n  } = options\n\n  const headings = []\n  const tokens = marked.lexer(markdown)\n\n  tokens.forEach(token => {\n    if (token.type === 'heading') {\n      // Skip if level is outside the desired range\n      if (token.depth < minLevel || token.depth > maxLevel) {\n        return\n      }\n      \n      // Skip if text matches excluded patterns\n      const shouldExclude = excludeTexts.some(excludeText => \n        token.text.toLowerCase().includes(excludeText.toLowerCase())\n      )\n      \n      if (shouldExclude) {\n        return\n      }\n\n      const id = token.text.toLowerCase().replace(/[^\\w]+/g, '-')\n      headings.push({\n        level: token.depth,\n        text: token.text,\n        id: id\n      })\n    }\n  })\n\n  return headings\n}\n\n/**\n * Get word count from markdown\n * @param {string} markdown - The markdown text\n * @returns {number} - Word count\n */\nexport function getMarkdownWordCount(markdown) {\n  if (!markdown) return 0\n\n  // Remove markdown syntax and count characters for Japanese\n  const plainText = markdown\n    .replace(/```[\\s\\S]*?```/g, '') // Remove code blocks\n    .replace(/`[^`]*`/g, '') // Remove inline code\n    .replace(/\\[([^\\]]*)\\]\\([^)]*\\)/g, '$1') // Remove links but keep text\n    .replace(/[#*_~`>-]/g, '') // Remove markdown symbols\n    .replace(/\\s+/g, ' ') // Normalize whitespace\n    .trim()\n\n  return plainText.length\n}\n\n/**\n * Copy code block content to clipboard\n * @param {HTMLElement} button - The copy button element\n */\nwindow.copyCodeToClipboard = function (button) {\n  try {\n    const codeBlock = button.closest('.markdown-code-block')\n    const codeContent = codeBlock.querySelector('code').textContent\n\n    navigator.clipboard\n      .writeText(codeContent)\n      .then(() => {\n        const originalText = button.innerHTML\n        button.innerHTML = '<i class=\"pi pi-check\"></i> コピー済み'\n        button.classList.add('copied')\n\n        setTimeout(() => {\n          button.innerHTML = originalText\n          button.classList.remove('copied')\n        }, 2000)\n      })\n      .catch(err => {\n        console.error('Could not copy code: ', err)\n      })\n  } catch (error) {\n    console.error('Failed to copy code:', error)\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/views/DashboardView.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/takueisaotome/PycharmProjects/video2minutes/src/frontend/src/views/MinutesView.vue","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'computed' is defined but never used.","line":172,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":172,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'route' is assigned a value but never used.","line":202,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":202,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"minutes-view\">\n    <!-- Navigation Header -->\n    <div class=\"nav-header\">\n      <Button\n        icon=\"pi pi-arrow-left\"\n        label=\"ダッシュボードに戻る\"\n        class=\"p-button-text back-button\"\n        @click=\"goBack\"\n      />\n\n      <div class=\"breadcrumb\">\n        <span class=\"breadcrumb-item\">ダッシュボード</span>\n        <i class=\"pi pi-angle-right breadcrumb-separator\"></i>\n        <span class=\"breadcrumb-item current\">議事録</span>\n      </div>\n    </div>\n\n    <!-- Task Info Banner -->\n    <div v-if=\"task\" class=\"task-banner\">\n      <Card class=\"task-info-card\">\n        <template #content>\n          <div class=\"task-info\">\n            <div class=\"task-details\">\n              <div class=\"task-file\">\n                <i class=\"pi pi-file-video file-icon\"></i>\n                <div class=\"file-details\">\n                  <h3 class=\"file-name\">{{ task.video_filename }}</h3>\n                  <div class=\"file-meta\">\n                    <span class=\"file-size\">{{\n                      formatFileSize(task.video_size)\n                    }}</span>\n                    <span class=\"separator\">•</span>\n                    <span class=\"process-date\">{{\n                      formatDate(task.upload_timestamp)\n                    }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"task-status\">\n              <Badge\n                :value=\"getStatusLabel(task.status)\"\n                :severity=\"getStatusSeverity(task.status)\"\n                class=\"status-badge\"\n              />\n              <div v-if=\"task.processing_duration\" class=\"process-time\">\n                処理時間: {{ task.processing_duration }}\n              </div>\n            </div>\n          </div>\n        </template>\n      </Card>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"loadingTask\" class=\"loading-state\">\n      <ProgressSpinner />\n      <p>タスク情報を読み込み中...</p>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"taskError\" class=\"error-state\">\n      <Message severity=\"error\" :closable=\"false\">\n        <div class=\"error-content\">\n          <i class=\"pi pi-exclamation-triangle\"></i>\n          <div>\n            <strong>タスクの読み込みに失敗しました</strong>\n            <p>{{ taskError }}</p>\n          </div>\n        </div>\n      </Message>\n      <div class=\"error-actions\">\n        <Button\n          label=\"再読み込み\"\n          icon=\"pi pi-refresh\"\n          @click=\"loadTask\"\n          class=\"p-button-outlined\"\n        />\n        <Button\n          label=\"ダッシュボードに戻る\"\n          icon=\"pi pi-arrow-left\"\n          @click=\"goBack\"\n          class=\"p-button-secondary\"\n        />\n      </div>\n    </div>\n\n    <!-- Task Not Completed -->\n    <div\n      v-else-if=\"task && task.status !== 'completed'\"\n      class=\"not-ready-state\"\n    >\n      <Card>\n        <template #content>\n          <div class=\"not-ready-content\">\n            <div class=\"not-ready-icon\">\n              <i\n                v-if=\"task.status === 'processing'\"\n                class=\"pi pi-cog spinning\"\n              ></i>\n              <i\n                v-else-if=\"task.status === 'failed'\"\n                class=\"pi pi-exclamation-triangle\"\n              ></i>\n              <i v-else class=\"pi pi-clock\"></i>\n            </div>\n\n            <div class=\"not-ready-message\">\n              <h3 v-if=\"task.status === 'processing'\">議事録を生成中です</h3>\n              <h3 v-else-if=\"task.status === 'failed'\">\n                処理でエラーが発生しました\n              </h3>\n              <h3 v-else>議事録の生成を待機中です</h3>\n\n              <p v-if=\"task.status === 'processing'\">\n                現在{{ getStepLabel(task.current_step) }}を実行中です。<br />\n                処理完了まで今しばらくお待ちください。\n              </p>\n              <p v-else-if=\"task.status === 'failed'\">\n                {{ task.error_message || '処理中にエラーが発生しました。' }}\n              </p>\n              <p v-else>処理の開始を待機しています。</p>\n            </div>\n\n            <div class=\"not-ready-actions\">\n              <Button\n                v-if=\"task.status === 'processing'\"\n                label=\"処理状況を確認\"\n                icon=\"pi pi-eye\"\n                @click=\"showTaskDetail\"\n                class=\"p-button-outlined\"\n              />\n              <Button\n                v-if=\"task.status === 'failed'\"\n                label=\"再実行\"\n                icon=\"pi pi-refresh\"\n                @click=\"retryTask\"\n                :loading=\"retrying\"\n                class=\"p-button-warning\"\n              />\n              <Button\n                label=\"ダッシュボードに戻る\"\n                icon=\"pi pi-arrow-left\"\n                @click=\"goBack\"\n                class=\"p-button-secondary\"\n              />\n            </div>\n          </div>\n        </template>\n      </Card>\n    </div>\n\n    <!-- Minutes Content -->\n    <MinutesViewer\n      v-else-if=\"task && task.status === 'completed'\"\n      :task-id=\"taskId\"\n    />\n\n    <!-- Task Detail Modal -->\n    <TaskDetailModal\n      v-model:visible=\"showDetailModal\"\n      :task=\"task\"\n      @retry=\"retryTask\"\n      @delete=\"deleteTask\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useToast } from 'primevue/usetoast'\nimport { useTasksStore } from '@/stores/tasks'\nimport MinutesViewer from '@/components/MinutesViewer.vue'\nimport TaskDetailModal from '@/components/TaskDetailModal.vue'\nimport Card from 'primevue/card'\nimport Button from 'primevue/button'\nimport Badge from 'primevue/badge'\nimport Message from 'primevue/message'\nimport ProgressSpinner from 'primevue/progressspinner'\n\nexport default {\n  name: 'MinutesView',\n  components: {\n    MinutesViewer,\n    TaskDetailModal,\n    Card,\n    Button,\n    Badge,\n    Message,\n    ProgressSpinner\n  },\n  props: {\n    taskId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const route = useRoute()\n    const router = useRouter()\n    const toast = useToast()\n    const tasksStore = useTasksStore()\n\n    const task = ref(null)\n    const loadingTask = ref(false)\n    const taskError = ref(null)\n    const showDetailModal = ref(false)\n    const retrying = ref(false)\n\n    const loadTask = async () => {\n      loadingTask.value = true\n      taskError.value = null\n\n      try {\n        // First check if task exists in store\n        let taskData = tasksStore.getTaskById(props.taskId)\n\n        if (!taskData) {\n          // If not in store, fetch from API\n          await tasksStore.fetchTasks()\n          taskData = tasksStore.getTaskById(props.taskId)\n        }\n\n        if (!taskData) {\n          // If still not found, fetch specific task status\n          taskData = await tasksStore.fetchTaskStatus(props.taskId)\n        }\n\n        if (!taskData) {\n          throw new Error('指定されたタスクが見つかりません')\n        }\n\n        task.value = taskData\n\n        // If task is processing, start real-time updates\n        if (taskData.status === 'processing') {\n          tasksStore.connectToTask(props.taskId)\n        }\n      } catch (error) {\n        taskError.value = error.message\n        console.error('Failed to load task:', error)\n      } finally {\n        loadingTask.value = false\n      }\n    }\n\n    const goBack = () => {\n      router.push({ name: 'dashboard' })\n    }\n\n    const showTaskDetail = () => {\n      showDetailModal.value = true\n    }\n\n    const retryTask = async () => {\n      if (!task.value) return\n\n      retrying.value = true\n      try {\n        await tasksStore.retryTask(props.taskId)\n\n        toast.add({\n          severity: 'success',\n          summary: '再実行開始',\n          detail: '処理を再開始しました',\n          life: 3000\n        })\n\n        // Reload task data\n        await loadTask()\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '再実行エラー',\n          detail: error.message,\n          life: 5000\n        })\n      } finally {\n        retrying.value = false\n      }\n    }\n\n    const deleteTask = async () => {\n      if (!task.value) return\n\n      try {\n        await tasksStore.deleteTask(props.taskId)\n\n        toast.add({\n          severity: 'success',\n          summary: '削除完了',\n          detail: 'タスクを削除しました',\n          life: 3000\n        })\n\n        // Navigate back to dashboard\n        goBack()\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '削除エラー',\n          detail: error.message,\n          life: 5000\n        })\n      }\n    }\n\n    const getStatusLabel = status => {\n      const labels = {\n        pending: '待機中',\n        processing: '処理中',\n        completed: '完了',\n        failed: 'エラー'\n      }\n      return labels[status] || status\n    }\n\n    const getStatusSeverity = status => {\n      const severities = {\n        pending: 'info',\n        processing: 'warning',\n        completed: 'success',\n        failed: 'danger'\n      }\n      return severities[status] || 'info'\n    }\n\n    const getStepLabel = step => {\n      const labels = {\n        upload: 'アップロード',\n        audio_extraction: '音声抽出',\n        transcription: '文字起こし',\n        minutes_generation: '議事録生成'\n      }\n      return labels[step] || step\n    }\n\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = timestamp => {\n      if (!timestamp) return ''\n      const date = new Date(timestamp)\n      return date.toLocaleString('ja-JP', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }\n\n    // Watch for task updates in the store\n    watch(\n      () => tasksStore.getTaskById(props.taskId),\n      newTask => {\n        if (newTask) {\n          task.value = newTask\n        }\n      },\n      { deep: true }\n    )\n\n    // Load task on mount\n    onMounted(() => {\n      loadTask()\n    })\n\n    return {\n      task,\n      loadingTask,\n      taskError,\n      showDetailModal,\n      retrying,\n      loadTask,\n      goBack,\n      showTaskDetail,\n      retryTask,\n      deleteTask,\n      getStatusLabel,\n      getStatusSeverity,\n      getStepLabel,\n      formatFileSize,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.minutes-view {\n  max-width: 1400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-6);\n  animation: fadeIn 0.6s ease-out;\n}\n\n.nav-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: var(--space-4);\n  padding: var(--space-6);\n  margin: 0 24px var(--space-6) 24px;\n  border-bottom: 2px solid var(--gray-200);\n  background: white;\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow-sm);\n}\n\n.back-button {\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-fast);\n}\n\n.back-button:hover {\n  transform: translateX(-2px);\n  color: var(--primary-600);\n}\n\n.breadcrumb {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: 0.95rem;\n  color: var(--gray-700);\n  font-weight: 500;\n}\n\n.breadcrumb-item.current {\n  color: var(--gray-800);\n  font-weight: 600;\n}\n\n.breadcrumb-separator {\n  font-size: 0.85rem;\n  color: var(--gray-600);\n}\n\n.task-banner {\n  margin: 0 24px var(--space-6) 24px;\n  animation: slideUp 0.6s ease-out 0.1s both;\n}\n\n.task-info-card {\n  border: 1px solid var(--gray-200);\n  box-shadow: var(--shadow-lg);\n  background: white;\n}\n\n.task-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: var(--space-8);\n}\n\n.task-file {\n  display: flex;\n  align-items: center;\n  gap: var(--space-5);\n}\n\n.file-icon {\n  font-size: 3rem;\n  color: var(--primary-500);\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n.file-name {\n  margin: 0 0 var(--space-2) 0;\n  color: var(--gray-800);\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1.3;\n}\n\n.file-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--gray-800);\n  font-size: 1rem;\n  font-weight: 500;\n}\n\n.separator {\n  color: var(--gray-300);\n  font-weight: bold;\n}\n\n.task-status {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: var(--space-3);\n}\n\n/* Badge styling improvements - 日本語対応 */\n:deep(.p-badge) {\n  /* 日本語テキストのはみ出し修正 */\n  line-height: 1.2 !important;\n  height: auto !important;\n  min-height: 1.5rem;\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  padding: 0.4rem 0.8rem !important;\n}\n\n/* 完了ステータスの色修正 */\n:deep(.p-badge.p-badge-success) {\n  background-color: #10b981 !important;\n  color: #ffffff !important;\n}\n\n.status-badge {\n  font-size: 1.1rem;\n  padding: var(--space-3) var(--space-5);\n  font-weight: 600;\n  border-radius: var(--radius-md);\n}\n\n.process-time {\n  font-size: 0.9rem;\n  color: var(--gray-800);\n  font-weight: 500;\n}\n\n.loading-state,\n.error-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--space-5);\n  padding: var(--space-12);\n  text-align: center;\n  background: white;\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-md);\n  border: 1px solid var(--gray-200);\n}\n\n.error-content {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-4);\n  text-align: left;\n}\n\n.error-content i {\n  font-size: 1.75rem;\n  color: var(--error-500);\n  margin-top: var(--space-1);\n}\n\n.error-actions {\n  display: flex;\n  gap: var(--space-4);\n  margin-top: var(--space-5);\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.not-ready-state {\n  margin-top: var(--space-8);\n  animation: slideUp 0.6s ease-out 0.2s both;\n}\n\n.not-ready-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--space-8);\n  padding: var(--space-12);\n  text-align: center;\n}\n\n.not-ready-icon {\n  font-size: 5rem;\n  color: var(--gray-500);\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));\n}\n\n.not-ready-icon .spinning {\n  animation: spin 2s linear infinite;\n  color: var(--primary-500);\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.not-ready-message h3 {\n  margin: 0 0 var(--space-4) 0;\n  color: var(--gray-800);\n  font-size: 1.75rem;\n  font-weight: 700;\n}\n\n.not-ready-message p {\n  margin: 0;\n  color: var(--gray-700);\n  line-height: 1.7;\n  max-width: 600px;\n  font-size: 1.1rem;\n}\n\n.not-ready-actions {\n  display: flex;\n  gap: var(--space-4);\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .nav-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n    margin: 0 16px var(--space-6) 16px;\n  }\n\n  .task-banner {\n    margin: 0 16px var(--space-6) 16px;\n  }\n\n  .task-info {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n\n  .task-status {\n    align-items: flex-start;\n    width: 100%;\n  }\n\n  .file-name {\n    font-size: 1.1rem;\n  }\n\n  .file-meta {\n    flex-wrap: wrap;\n  }\n\n  .not-ready-content {\n    padding: 2rem 1rem;\n  }\n\n  .not-ready-message h3 {\n    font-size: 1.25rem;\n  }\n\n  .not-ready-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .error-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n}\n\n@media (max-width: 480px) {\n  .minutes-view {\n    gap: 1rem;\n  }\n\n  .task-file {\n    flex-direction: column;\n    text-align: center;\n    gap: 0.75rem;\n  }\n\n  .file-icon {\n    font-size: 2rem;\n  }\n\n  .not-ready-icon {\n    font-size: 3rem;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]}]
